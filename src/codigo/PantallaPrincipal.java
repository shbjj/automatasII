package codigo;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import codigo.Tokens;
import com.sun.awt.AWTUtilities;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import jdk.nashorn.internal.runtime.regexp.joni.Syntax;

/**
 *
 * @author hbdye
 */
public class PantallaPrincipal extends javax.swing.JFrame {
    
    NumeroLinea numeroLinea;

    /**
     * Creates new form Hugp
     */
    int x, y;
    FondoPanel fondo = new FondoPanel();

    public PantallaPrincipal() {
        this.setContentPane(fondo);
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(this);
        AWTUtilities.setWindowOpaque(this, false);
        numeroLinea = new NumeroLinea(txtArea_CodigoDirecto);
        jScrollPane1.setRowHeaderView(numeroLinea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea_CodigoDirecto = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea_CodigoAnalisisLexico = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        open = new javax.swing.JButton();
        save = new javax.swing.JButton();
        review = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        sal = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(54, 73, 78));
        jLabel1.setText(" Analizador");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jLabel1.setVerifyInputWhenFocusTarget(false);
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel1KeyPressed(evt);
            }
        });

        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("EditorPane.inactiveForeground"));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/close_small.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/close_small.png"))); // NOI18N
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/close_graw.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtArea_CodigoDirecto.setBackground(new java.awt.Color(157, 167, 255));
        txtArea_CodigoDirecto.setColumns(20);
        txtArea_CodigoDirecto.setRows(5);
        txtArea_CodigoDirecto.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(txtArea_CodigoDirecto);

        txtArea_CodigoAnalisisLexico.setEditable(false);
        txtArea_CodigoAnalisisLexico.setColumns(20);
        txtArea_CodigoAnalisisLexico.setRows(5);
        jScrollPane2.setViewportView(txtArea_CodigoAnalisisLexico);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/minimize_small.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/minimize_small.png"))); // NOI18N
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/minimize_graw.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/open_big.png"))); // NOI18N
        open.setContentAreaFilled(false);
        open.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/open_big.png"))); // NOI18N
        open.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/open_small.png"))); // NOI18N
        open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openMouseClicked(evt);
            }
        });
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/save_big.png"))); // NOI18N
        save.setContentAreaFilled(false);
        save.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/save_big.png"))); // NOI18N
        save.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/save_small.png"))); // NOI18N
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        review.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/search_big.png"))); // NOI18N
        review.setContentAreaFilled(false);
        review.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/search_big.png"))); // NOI18N
        review.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/search_small.png"))); // NOI18N
        review.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(sal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(review, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(review, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 61, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1KeyPressed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here: PARA MOVER LA VENTANA
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseDragged

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openActionPerformed

    private void openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMouseClicked
        // TODO add your handling code here:
        leerArchivo();
    }//GEN-LAST:event_openMouseClicked

    private void reviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewActionPerformed
        // TODO add your handling code here:
       
        
        
        File archivo = new File("archivo.txt");
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            escribir.print(txtArea_CodigoDirecto.getText());
            txtArea_CodigoDirecto.requestFocus();
            txtArea_CodigoDirecto.select(5, 6);
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Reader lector = new BufferedReader(new FileReader("archivo.txt"));
            Lexer lexer = new Lexer(lector);
            String resultado = "";
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado += "\n ";
                    txtArea_CodigoAnalisisLexico.setText(resultado);
                    return;
                }
                switch (tokens) {
                    case ERROR:
                        resultado += "Error, no valido '" + lexer.lexeme + "'"+"\tLinea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        break;
                    case Linea:
                        break;
                    case Const: case Var: case Procedure: case Call: case If: case Then:case While:case Do:case Odd: case End:case Begin:
                    resultado += lexer.lexeme + "\t" + "Reservada" + "\tLinea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        break;
                    case Identificador: case Numero:
                        resultado += lexer.lexeme + "\t" + tokens + "\tLinea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        break;
                    case errorOdd:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'odd'") == 0) {
                            lexer.lexeme = "odd";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorConst:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'const'") == 0) {
                            lexer.lexeme = "const";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorCall:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'call'") == 0) {
                            lexer.lexeme = "call";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorThen:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'then'") == 0) {
                            lexer.lexeme = "then";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorWhile:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'while'") == 0) {
                            lexer.lexeme = "while";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorProcedure:
                        if (JOptionPane.showConfirmDialog(null, "Se recibio '" + lexer.lexeme + "', en la linea: "+lexer.linea+", tal vez quisiste decir " + "'procedure'") == 0) {
                            lexer.lexeme = "procedure";
                            //Cambiar el yylex, pendiente
                            resultado += lexer.lexeme + "\tReservadas"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        } else {
                            resultado += lexer.lexeme + "\tIdentificador"+"\t Linea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        }
                        break;
                    case errorIdentificador:
                        JOptionPane.showMessageDialog(null, "Identificador mal escrito '" + lexer.lexeme + "' en la linea: "+lexer.linea+", escribalo de nuevo");
                        resultado += "ERROR\tIdentificador mal escrito '" + lexer.lexeme + "'\n";
                        break;
                    case errorNumero:
                        JOptionPane.showMessageDialog(null, "Número mal escrito '" + lexer.lexeme + "' en la linea: "+lexer.linea+", escribalo de nuevo");
                        resultado += "ERROR\tNúmero mal escrito '" + lexer.lexeme + "'\tLinea: "+lexer.linea+"\n";
                        break;
                    case errorComentario:
                        JOptionPane.showMessageDialog(null, "Comentario de tipo /* */ no cerrado  en la linea: "+lexer.linea+",");
                        resultado += "ERROR\tComentario /* no cerrado  en la linea: "+lexer.linea+",\n";
                        break;
                    case Parentesis_a:
                    case Parentesis_c:
                    case MayorIgual:
                    case MenorIgual:
                    case Igual:
                    case Mayor:
                    case Menor:
                    case Coma:
                    case PuntoComa:
                    case Punto:
                    case Asterisco:
                    case Diagonal:
                    case Mas:
                    case Diferente:
                    case Asignacion:
                    case Menos:
                        resultado += lexer.lexeme + "\t" + tokens + "\tLinea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                        break;
                    default:
                        resultado += "Token: " + tokens + "\tLinea: "+lexer.linea+ "\tColumna: "+lexer.columna+"\n";
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Proto
        
        //
    }//GEN-LAST:event_reviewActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        sal.setText("");
        String temp="";
        String ST=txtArea_CodigoDirecto.getText();
        Sintax s= new Sintax(new codigo.LexerCup(new StringReader(ST)));
        
        try {
            s.parse();
            sal.setText("Analisis realizado correctamente");
            sal.setForeground(new Color(25,111,61));
        } catch (Exception ex) {
            
            Symbol sym= s.getS();
            sal.setText("Error de sintaxis, Linea: "+(sym.right+1)+" Columna: "+(sym.left+1)+", Texto: \""+sym.value+"\"");
            sal.setForeground(Color.red);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void leerArchivo() {
        /*Sirve para elegir el archivo de texto y leerlo*/
        //Declarar el JFileChooser
        JFileChooser buscador = new JFileChooser();
        buscador.showOpenDialog(buscador);
        String texto = "";
        try {   //El buscador de ventana seleccionara un archivo, y 
            //se obtendra la cadena de direccion del archivo
            String patch = buscador.getSelectedFile().getAbsolutePath();

            BufferedReader br = new BufferedReader(new FileReader(patch));

            String temp = "";
            String bfRead;
            while ((bfRead = br.readLine()) != null) {//miestras que br.readLine() tenga datos
                temp = temp + bfRead + "\n";//Guardar el texto del Archivo
            }
            texto = temp;//El texto del documento se guarda aqui

            txtArea_CodigoDirecto.setText(texto);
            //FileInputStream archivo=new FileInputStream(patch);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al leer Archivo");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
        String ruta = "src/codigo/Lexer.flex";
        String ruta2 = "src/codigo/LexerCup.flex";
        String [] rutaS={"-parser","Sintax","src/codigo/Sintax.cup"};
        //String ruta="C:/Users/hbdye/Documents/NetBeansProjects/prueba/src/codigo/Lexer.flex";
        generar(ruta, ruta2, rutaS);
    }

    public static void generar(String ruta1, String ruta2, String[] rutaS) throws IOException, Exception {
        File archivo;
        archivo= new File(ruta1);
        JFlex.Main.generate(archivo);
        archivo=new File(ruta2);
        JFlex.Main.generate(archivo);
        java_cup.Main.main(rutaS);
        
        Path rutaSym=Paths.get("src/codigo/sym.java");
        if(Files.exists(rutaSym))
        {
            Files.delete(rutaSym);
        }
        Files.move(
        Paths.get("sym.java"),
        Paths.get("src/codigo/sym.java")        
        );
        Path rutaSin=Paths.get("src/codigo/Sintax.java");
        if(Files.exists(rutaSin))
        {
            Files.delete(rutaSin);
        }
        Files.move(
        Paths.get("Sintax.java"),
        Paths.get("src/codigo/Sintax.java")        
        );
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton open;
    private javax.swing.JButton review;
    private javax.swing.JTextPane sal;
    private javax.swing.JButton save;
    private javax.swing.JTextArea txtArea_CodigoAnalisisLexico;
    private javax.swing.JTextArea txtArea_CodigoDirecto;
    // End of variables declaration//GEN-END:variables

    //Clase para hacer el fondo
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagen/fondo_azul.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }

    }

}
